create database ecommerce;
use ecommerce;

create table customers (
    id int auto_increment primary key,
    name varchar(255) not null,
    email varchar(255) unique not null,
    address text
);

create table products (
    id int auto_increment primary key,
    name varchar(255) not null,
    price decimal(10,2) not null,
    description text
);

create table orders (
    id int auto_increment primary key,
    customer_id int not null,
    order_date date not null,
    total_amount decimal(10,2) not null,
    foreign key (customer_id) references customers(id)
);


insert into customers (name, email, address) values 
('John Doe', 'john@example.com', '123 Elm Street'),
('Jane Smith', 'jane@example.com', '456 Oak Avenue'),
('Alice Brown', 'alice@example.com', '789 Pine Road');

insert into products (name, price, description) values 
('Product A', 25.00, 'Description of Product A'),
('Product B', 35.00, 'Description of Product B'),
('Product C', 40.00, 'Description of Product C');

insert into orders (customer_id, order_date, total_amount) values 
(1, CURDATE(), 60.00),
(2, CURDATE() - INTERVAL 10 DAY, 45.00),
(3, CURDATE() - INTERVAL 40 DAY, 80.00);

select distinct c.* from customers c 
join orders o on c.id = o.customer_id 
where o.order_date >= CURDATE() - INTERVAL 30 DAY;

select c.id, c.name, SUM(o.total_amount) as total_spent 
from customers c 
join orders o on c.id = o.customer_id 
group by c.id, c.name;

SET SQL_SAFE_UPDATES = 0;
update products set price = 45.00 where name = 'Product C';

alter table products add column discount decimal(5,2) default 0;


TRUNCATE TABLE order_items;
drop table order_items;


create table order_items (
    id int auto_increment primary key,
    order_id int not null,
    product_id int not null,
    quantity int not null,
    subtotal decimal(10,2) not null,
    foreign key (order_id) references orders(id),
    foreign key (product_id) references products(id)
);

insert into order_items (order_id, product_id, quantity, subtotal) values 
(1, 1, 2, 50.00),
(1, 2, 1, 25.00),
(2, 3, 1, 45.00),
(3, 1, 3, 75.00);


select distinct c.name from customers c
join orders o on c.id = o.customer_id
join order_items oi on o.id = oi.order_id
join products p on oi.product_id = p.id
where p.name = 'Product A';

select c.name, o.order_date from orders o
join customers c on o.customer_id = c.id;

select * from orders where total_amount > 150.00;

select AVG(total_amount) as average_order_total from orders;

